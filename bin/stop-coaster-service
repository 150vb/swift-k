#!/bin/bash

# crash: Report a problem and exit
crash()
{
   MSG=$1
   echo ${MSG} >&2
   exit 1
}

# Location of required files
PID_FILE="$HOME/.swift/.coaster-service-pids"
SWIFTVM_INSTANCES="$HOME/.swift/.swiftvm_instance"

# Import settings
if [ -f "./coaster-service.conf" ]; then
   CONFIG_FILE="./coaster-service.conf"
elif [ -f "$HOME/.swift/coaster-service.conf" ]; then
   CONFIG_FILE="$HOME/.swift/coaster-service.conf"
elif [ -f "$(dirname $(readlink -f $0))/../etc/coaster-service.conf" ]; then
   CONFIG_FILE="$(dirname $(readlink -f $0))/../etc/coaster-service.conf"
else
   crash "Cannot find coaster-service.conf!"
fi

source "$CONFIG_FILE"

echo Ending coaster processes..
if [ -f "$PID_FILE" ]; then
   for pid in `cat $PID_FILE`
   do
      #echo "$pid"
      for i in `ps -ef| awk '$3 == '$pid' { print $2 }'`
      do
         #echo "$i"
         kill $i > /dev/null 2>&1
      done
      kill $pid > /dev/null 2>&1
   done
   rm $PID_FILE > /dev/null 2>&1
fi

if [ "$WORKER_MODE" == "futuregrid" ] && [ -f "$SWIFTVM_INSTANCES" ]; then
   for INSTANCE in `cat $SWIFTVM_INSTANCES`
   do
      $SWIFTVMBOOT_DIR/ve/bin/cloudinitd terminate $INSTANCE
   done
   rm $SWIFTVM_INSTANCES > /dev/null 2>&1
fi

if [ "$WORKER_MODE" == "ec2" ] && [ -f "$SWIFTVM_INSTANCES" ]; then
   for INSTANCE in `cat $SWIFTVM_INSTANCES`
   do
      echo Stopping ec2 instance $INSTANCE...
      $SWIFTVMBOOT_DIR/bin/gp-instance-stop $INSTANCE | sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g"
  done
  rm $SWIFTVM_INSTANCES > /dev/null 2>&1
fi

popd > /dev/null 2>&1
