#!/bin/bash

rm -f /tmp/stsubmit

LOGGING=1 # Either 1 or 0
RUNDIRS=$(echo run[0-9][0-9][0-9])
RUNDIR=${RUNDIRS##*\ }
LOG=$RUNDIR/scripts/log
AIMES_LOCK=$RUNDIR/scripts/AIMES_lock
PID_FILE=$AIMES_LOCK/pid_file

SUBMIT_SCRIPT=$RUNDIR/scripts/aimes.$(date +"%H:%M:%S").$RANDOM.submit
mkdir -p $(dirname $LOG)
touch $SUBMIT_SCRIPT

[[ "$LOGGING" == "1" ]] && mkdir -p $(dirname $LOG)
log()
{
    [[ "$LOGGING" == "1" ]] && echo "[PID:$$] $*" >> $LOG
}

# TODO : UPDATE THIS BEFORE PUSH
AIMES_CLIENT=$SWIFT_HOME/libexec/aimes-emanager-provider/aimes-swift-client.py
#AIMES_CLIENT=/home/yadu/src/swift-k/cogkit/modules/provider-localscheduler/libexec/aimes-emanager-provider/aimes-swift-client.py
ENDPOINT='http://localhost:8080'

start_session()
{
    # Ensure that only one application acquires the lock and starts the AIMES_SERVER
    if mkdir "$AIMES_LOCK" ; then
        log "Locking succeeded"
        python $AIMES_CLIENT -e $ENDPOINT -l $RUNDIR/aimes_client.log --init_session FOO &> $RUNDIR/session_id
        echo "[PID:$$] Done" > $AIMES_LOCK/release
    else
        log "Could not acquire lock"
        # Wait in a spin look till $AIMES_LOCK/release file is created
        while [[ ! -f $AIMES_LOCK/release ]]
        do
            sleep 1
            log "Waiting for lock holder to finish"
        done
        log "lock holder has released lock"
    fi
}

start_session;
SESSION_ID=$(cat $RUNDIR/session_id)
if $SESSION_ID != ssid*
then
    log "SESSION ID : $SESSION_ID not a valid session id"
    exit -3
fi

while read LINE; do
    echo $LINE >> $SUBMIT_SCRIPT
done < /dev/stdin

log "##############SUBMIT_SCRIPT###################"
cat $SUBMIT_SCRIPT >> $LOG
log "##############SUBMIT_SCRIPT###################"

log "[DEBUG] PWD : $PWD"
log "python $AIMES_CLIENT --logfile $SUBMIT_SCRIPT.stdout --submit $SUBMIT_SCRIPT --endpoint $ENDPOINT --session $SESSION_ID"

JOBINFO=$(python $AIMES_CLIENT --logfile $SUBMIT_SCRIPT.foo.stdout --submit $SUBMIT_SCRIPT --endpoint $ENDPOINT --session $SESSION_ID) 2>> $LOG
echo "jobid=$JOBINFO"
retcode="$?"
log "JOBINFO : $JOBINFO"
log "RETCODE : $retcode"

[[ "$retcode" != "0" ]] && exit retcode

exit 0
