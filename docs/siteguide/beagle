Beagle
------

Requesting Access
~~~~~~~~~~~~~~~~~
If you do not already have a Computation Institute account, you can request
one at https://www.ci.uchicago.edu/accounts/. This page will give you a list
of resources you can request access to. 
You already have an existing CI account, but do not have access to Beagle,
send an email to support@ci.uchicago.edu to request access.

Connecting to a login node
~~~~~~~~~~~~~~~~~~~~~~~~~~
Once you have account, you should be able to access a Beagle login
node with the following command:

-----
ssh yourusername@login.beagle.ci.uchicago.edu
-----

Follow the steps outlined below to get started with Swift on Beagle:

*step 1.* Load the Swift module on Beagle as follows: +module load swift+

*step 2.* Create and change to a directory where your Swift related work will
stay. (say, +mkdir swift-lab+, followed by, +cd swift-lab+)

*step 3.* To get started with a simple example running +/bin/cat+ to read an
input file +data.txt+ and write to an output file +f.nnn.out+, copy the folder
at +/home/ketan/catsn+ to the above directory. (+cp -r /home/ketan/catsn
.+ followed by +cd catsn+).

*step 4.*  In the sites file: +beagle-coaster.xml+, make the following two
changes: *1)* change the path of +workdirectory+ to your preferred location
(say to +/lustre/beagle/$USER/swift-lab/swift.workdir+) and *2)* Change the
project name to your project (+CI-CCR000013+) . The workdirectory will contain
execution data related to each run, e.g. wrapper scripts, system information,
inputs and outputs.

*step 5.* Run the example using following commandline (also found in run.sh):
+swift -config cf -tc.file tc -sites.file beagle-coaster.xml catsn.swift -n=1+
. You can further change the value of +-n+ to any arbitrary number to run that
many number of concurrent +cat+

*step 6.* Check the output in the generated +outdir+ directory (+ls outdir+)

Note: Running from sandbox node or requesting 30 minutes walltime for upto 3 nodes
will get fast prioritized execution. Good for small tests.

Larger Runs on Beagle
~~~~~~~~~~~~~~~~~~~~~
A key factor in scaling up Swift runs on Beagle is to setup the sites.xml parameters.
The following sites.xml parameters must be set to scale that is intended for a large run:

 * *maxTime* : The expected walltime for completion of your run. This parameter is accepted in seconds.
 * *slots* : This parameter specifies the maximum number of jobs/blocks that the coaster scheduler will have running at any given time. On Beagle, this number will determine how many qsubs swift will submit for your run. Typical values range between 40 and 60 for large runs.
 * *nodeGranularity* : Determines the number of nodes per job. It restricts the number of nodes in a job to a multiple of this value. The total number of workers will then be a multiple of jobsPerNode * nodeGranularity. For Beagle, jobsPerNode value is 24 corresponding to its 24 cores per node. 
 * *maxNodes* : Determines the maximum number of nodes a job must pack into its qsub. This parameter determines the largest single job that your run will submit.
 * *jobThrottle* : A factor that determines the number of tasks dispatched simultaneously. The intended number of simultaneous tasks must match the number of cores targeted. The number of tasks is calculated from the jobThrottle factor is as follows:

----
Number of Tasks = (JobThrottle x 100) + 1
----

Following is an example sites.xml for a 50 slots run with each slot occupying 4 nodes (thus, a 200 node run):

-----
<config>
  <pool handle="pbs">
    <execution provider="coaster" jobmanager="local:pbs"/>
    <profile namespace="globus" key="project">CI-CCR000013</profile>

    <profile namespace="globus" key="ppn">24:cray:pack</profile>
   
    <!-- For swift 0.93
    <profile namespace="globus" key="ppn">pbs.aprun;pbs.mpp;depth=24</profile>
    -->

    <profile namespace="globus" key="jobsPerNode">24</profile>
    <profile namespace="globus" key="maxTime">50000</profile>
    <profile namespace="globus" key="slots">50</profile>
    <profile namespace="globus" key="nodeGranularity">4</profile>
    <profile namespace="globus" key="maxNodes">4</profile>

    <profile namespace="karajan" key="jobThrottle">48.00</profile>
    <profile namespace="karajan" key="initialScore">10000</profile>

    <filesystem provider="local"/>
    <workdirectory >/lustre/beagle/ketan/swift.workdir</workdirectory>
  </pool>
</config>
-----

