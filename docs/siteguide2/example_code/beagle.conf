sites: [beagle]

# Instructions for Beagle
# 1. If you are running on the beagle login nodes, set jobManager: "local:pbs"
# 2. Find your project name/allocation and set jobProject : "YOUR_PROJECT_ON_BEAGLE"
# 3. Set userHomeOverride : "/lustre/beagle2/YOUR_USERNAME_ON_BEAGLE/swiftwork"
# 4. Set workDirectory : "/tmp/YOUR_USERNAME_ON_BEAGLE/swiftwork"
site.beagle {
    execution {
        type      : "coaster"                         # Use coasters to run on remote sites
        URL       : "login4.beagle.ci.uchicago.edu"    # Beagle login URL
        jobManager: "ssh-cl:pbs"                      # use ssh-cl to connect, pbs is the Local Resource manager(LRM)
        options {
            maxJobs         : 1                       # Max jobs submitted to LRM
            nodeGranularity : 1                       # Nodes per job
            maxNodesPerJob  : 1                       # Nodes per job
            tasksPerNode    : 4                       # Tasks per Node
            jobQueue        : "development"           # Select queue
            jobProject      : ${env.BEAGLE_PROJECT}   # Project|Allocation on Beagle
            userHomeOverride: "/lustre/beagle2/"${env.BEAGLE_USERNAME}"/swiftwork" # Point to lustre shared-filesystem
            maxJobTime      : "00:25:00"              # Time requested per job
            jobOptions {
                pbs.aprun: true                       # Submit jobs via aprun mechanism
                pbs.mpp  : true                       # Mpp enabled
                depth    : "4"                        # 4 cores per task
            }
        }
    }
    staging             : "local"                     # Stage files from "local" system to Beagle
    workDirectory       : "/tmp/"${env.BEAGLE_USERNAME}"/swiftwork" # Location for intermediate files
    maxParallelTasks    : 101                         # Maximum number of parallel tasks
    initialParallelTasks: 100                         # Maximum number of tasks at start
    app.ALL { executable: "*" }                       # All tasks to be found from commandline
}

TCPPortRange: "50000,51000"                           # TCP port range used by swift to communicate with remote sites
lazyErrors: false                                     # Swift fails immediately upon encountering an error
executionRetries: 0                                   # Set number of retries upon task failures
keepSiteDir: true                                     # Keep Site Dir (useful for debug)
providerStagingPinSwiftFiles: false                   # Pin staging files (useful for debug)
alwaysTransferWrapperLog: true                        # Transfer wrapper logs (useful for debug)
