# 1. Comments start with "#"
# 2. New lines are ignored. Consequently empty lines are ignored.
# 3. The regular expression is separated from the replacement by a line containing only "->"
# 4. A replacement is separated from the next regexp by a line containing only ";"
# 5. Whitespace (other than newlines) is not ignored (careful about extra spaces at the end of a line)
# 6. Inserting a matched group inside the replacement is done with \<groupindex> (i.e. \1, \2,...)
# 7. Regular expression matching is done with DOTALL enabled. In other words the dot will match
#    new lines.
#

.*Could not find any valid host for task .* 
with constraints \{trfqn=(.*), tr=(.*)\}.*
->
The requested application (\2) cannot be found installed on any of the sites. 
Check your tc.data and sites.xml files.
;

Exception in (\S*):.*
Arguments: \[(.*)\].*Host: (\S*).*Directory: (\S*).*stderr.txt:\s*(.*)\s*stdout.txt:\s*(.*)\s*----.*
Job (\S*) failed with an exit code of (\d*).*
->
Application "\1" failed (exit code: \2)\n
\tArguments: "\2"\n\tHost: "\3"\n\tSTDERR: \5\n\tSTDOUT: \6\n
;


The cache already contains (\S*)\..*
->
Multiple mappings poiting to the same file (\1) detected.
;

.*Could not initialize shared directory on (\S*).*
Cannot create directory (\S*).*Disk quota exceeded
.*
->
Could not initialize shared directory on \1: Disk quota exceeded
;

Exception in (\S*):.*
Arguments: \[(.*)\].*Host: (\S*).*Directory: (\S*).*stderr.txt:\s*(.*)\s*stdout.txt:\s*(.*)\s*----.*
Exception in getFile.*
Unable to open file (\S*).*
->
Error retrieving file "\7"\n 
\tApplication: "\1"\n\tArguments: "\2"\n\tHost: "\3"\n\tSTDERR: \5\n\tSTDOUT: \6\n
;
