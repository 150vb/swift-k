sites.file=${vds.home}/etc/sites.xml
tc.file=${vds.home}/var/tc.data


#
# false	- means an error will be immediately reported and cause the
# 		workflow to abort. At this time remote jobs that are already
#		running will not be canceled
# true	- means that VDL2 will try to do as much work as possible and 
#		report all errors encountered at the end. However, "errors"
#		here only applies to job execution errors. Certain errors
#		that are related to the VDL2 implementation (should such 
#		errors occur) will still be reported eagerly.
#
lazy.errors=true


#
# false	- means that cleanups will be done after each job is done. 
#		Use this if your workflow deals with very large datasets and
#		you need to be careful about running out of disk space on
#		remote resources.
# true	- means that cleanup will be done at the end of the workflow.
#		Use this to get better performance at the expense of remote
#		disk usage.
#
lazy.cleanup=true


caching.algorithm=LRU

#
# true       - generate a provenance graph in .dot format (VDL2 will
#			 choose a random file name)
# false      - do not generate a provenance graph 
# <filename> - generate a provenange graph in the give file name
pgraph=true


#
# graph properties for the provenance graph (.dot specific) 
#
pgraph.graph.options=splines="compound", rankdir="TB"


#
# node properties for the provenance graph (.dot specific) 
#
pgraph.node.options=color="seagreen", style="filled"

