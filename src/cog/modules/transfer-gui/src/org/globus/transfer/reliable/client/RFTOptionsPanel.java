package org.globus.transfer.reliable.client;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.JFrame;

public class RFTOptionsPanel extends javax.swing.JPanel implements ItemListener {
    
    /** Creates new form RFTOptions */
    public RFTOptionsPanel() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabel3 = new javax.swing.JLabel();
        tcpBufferSize = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        parallelStream = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        concurrent = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        sourceSN = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        destSN = new javax.swing.JTextField();
        
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(org.globus.transfer.reliable.client.GridFTPGUIApp.class).getContext().getResourceMap(RFTOptionsPanel.class);
        setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("Form.border.title"))); // NOI18N
        setName("Form"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        tcpBufferSize.setText(resourceMap.getString("tcpBufferSize.text")); // NOI18N
        tcpBufferSize.setName("tcpBufferSize"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N     


        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        parallelStream.setText(resourceMap.getString("parallelStream.text")); // NOI18N
        parallelStream.setName("parallelStream"); // NOI18N

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        concurrent.setText(resourceMap.getString("concurrent.text")); // NOI18N
        concurrent.setName("concurrent"); // NOI18N

        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N

        sourceSN.setText(resourceMap.getString("sourceSN.text")); // NOI18N
        sourceSN.setName("sourceSN"); // NOI18N

        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N

        destSN.setText(resourceMap.getString("destSN.text")); // NOI18N
        destSN.setName("destSN"); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);        

        layout.setHorizontalGroup(
        		layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()                		
                    .addContainerGap()
                    .add(64, 64, 64)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(layout.createSequentialGroup()
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jLabel7)                                
                                .add(jLabel3))                            
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(parallelStream, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)                                
                                .add(tcpBufferSize, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 76, Short.MAX_VALUE))                             
                            
                        )
                            ))
            );
        layout.setVerticalGroup(
        		layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .add(26, 26, 26)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel7)
                        .add(parallelStream, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)

                        )
                    .add(11, 11, 11)
              .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel3)
                            .add(tcpBufferSize, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                             )
                            )
                    )
            );      

    }// </editor-fold>//GEN-END:initComponents


    
    public boolean getAllOrNone() {        
        return isAllorNone;
    }

    public boolean getBinary() {
        return isBinary;
    }

    public boolean getDCAU() {
        return isDCAU;
    }

    public String getDestSN() {
        return destSN.getText();
    } 

    public boolean getNoTpt() {
        return isNoTpt;
    }

    public int getParallelStream() {
        String value = parallelStream.getText();
        int ret = 1;
        if (null != value) {
            try {
                ret = Integer.valueOf(value);
            } catch (NumberFormatException e) {
                ret = 1;
            }
        }
        
        return ret;
    }

    public String getSourceSN() {
        return sourceSN.getText();
    }

    public int getTcpBufferSize() {
        String value = tcpBufferSize.getText();
        int ret = 16000;
        if (null != value) {
            try {
                ret = Integer.valueOf(value);
            } catch (NumberFormatException e) {
                ret = 16000;
            }
        }
        
        return ret;
    }
        
    public static void main(String[] args) {
        JFrame f = new JFrame();
        f.getContentPane().add(new RFTOptionsPanel());
        f.setVisible(true);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField concurrent;    
    private javax.swing.JTextField destSN;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField parallelStream;
    private javax.swing.JTextField sourceSN;
    private javax.swing.JTextField tcpBufferSize;
    private boolean isBinary = true;
    private boolean isNoTpt = false;
    private boolean isDCAU = true;
    private boolean isAllorNone = false;
    
    public void itemStateChanged(ItemEvent e) {       
    }
}
