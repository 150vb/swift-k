Swift + Radical-pilots tests
============================

To run these tests:
-------------------

1. mongodb must be running on the machine/remotely and a mongodb url must be provided
   in the swift.conf.

2. Install the following dependencies into a virtual-env :
    radical-pilots
    thrift

3. After each swift run, please kill the python daemon process.
    A clean mechanism to kill the daemon has not been implemented yet.
    From a design standpoint, the daemon as well as mongodb should be running independently
    of swift as a service that swift communicates with. The first task of each swift run,
    should start the necessary pilots, and handle the termination of pilots, features which
    are not quite done.

4. *WARNING* You can use any application as apps, but ensure that the app creates a wrapper.error
    file. Radical-pilots does not have a STAGE_ONLY_ON_FAILURE option, so a missing wrapper.eror
    file would be deemed as a failed task execution.

5. Install oracle-java and the latest swift package, and run :

    [source,bash]
    -----
    wget http://users.rcc.uchicago.edu/~yadunand/jdk-7u51-linux-x64.tar.gz
    tar -xzf jdk-7u51-linux-x64.tar.gz
    wget http://users.rcc.uchicago.edu/~yadunand/swift-trunk-latest.tar.gz
    tar -xzf swift-trunk-latest.tar.gz
    export PATH=$PWD/jdk1.7.0_51/bin:$PWD/swift-trunk/bin:$PATH # Please add this to your .bashrc or equivalent.

    # Check swift install
    swift -version

    # Run the actual tests.
    swift radical_sanity.swift -N=<Number of tasks>
    -----

The sanity tests, stages the input files and executes them locally, remote execution has
not been tested. Issues are likely to pop up with changing the staging mechanism from "direct"
to "local".

Troubleshooting:
----------------

1. Ensure that the radical pilot packages are installed into a virtual-env and the virtual-env
    is activated.
2. Check if the mongodb is active on the ports you specified.
3. Kill stray python daemon's from previous runs.  (killall -u $USER python -9)
4. The logs from the daemon process goes into runNNN/rp_server.log
5. The task descriptions go into runNNN/scripts/radical*.submit
6. The logs from every action on the client's side goes into runNNN/scripts/log


TODO:
-----

* Report task failures, if pilots failed, and none exist that can execute tasks ?



