<program xmlns="http://ci.uchicago.edu/swift/2009/02/swiftscript"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema">
  
  <types>
     	<type>
     		<typename>messagefile</typename>
     		<typealias>string</typealias>
     		<typestructure></typestructure>
     	</type>
     	<type>
     		<typename>countfile</typename>
     		<typealias>string</typealias>
     		<typestructure></typestructure>
     	</type>   
  </types>  
  <procedure name="countwords">

      <output 
    name="t" type="countfile"

     xsi:nil="true" />

      <input 
    name="f" type="messagefile"

     xsi:nil="true" />
    <binding>
      <application src="line 5">
        <executable>wc</executable>
        <stdout><function name="filename">
          <variableReference>t</variableReference></function></stdout><stringConstant>-w</stringConstant><function name="filename">
          <variableReference>f</variableReference></function>  </application>
    </binding>
  </procedure>
  <variable name="inputNames" type="string" xsi:nil="true"/>
  <assign src="line 12">
   <variableReference>inputNames</variableReference>
   <stringConstant>one.txt two.txt three.txt</stringConstant>
  </assign>
  <dataset name="inputfiles" type="messagefile[]">
    <mapping descriptor="array_mapper">
      <param name="files"><variableReference>inputNames</variableReference></param>
    </mapping>
  </dataset>
  <foreach var="f"  src="line 15">
  <in><variableReference>inputfiles</variableReference></in>
  <body><dataset name="c" type="countfile">
      <mapping descriptor="regexp_mapper">
        <param name="source"><function name="filename">
          <variableReference>f</variableReference></function></param>
        <param name="match"><stringConstant>(.*)txt</stringConstant></param>
        <param name="transform"><stringConstant>\1count</stringConstant></param>
      </mapping>
    </dataset>
    <call proc="countwords" src="line 17">
      <output><variableReference>c</variableReference></output>
      <input><variableReference>f</variableReference></input>
    </call></body>
  </foreach>
</program>
