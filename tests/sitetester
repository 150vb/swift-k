#!/usr/bin/env python

import commands
import os

# the workdir for a given site needs to exist on the site you're testing 
# and should contain run-nightly & nightly.sh
# this script will ssh onto the site, pass run-nightly the necesary variables
# for running nightly.sh

class Site:

    def __init__(self,login,logtype,workdir,queue,project,test):
        self.login = login
        self.logintype = logtype
        self.workdir = workdir
        self.queue = queue
        self.project = project
        self.test = test

    def testSite(self,cogv,swiftv):
            cmdline = self.logintype+" "+self.login+" "+self.workdir+"/run-suite.sh "+self.workdir+"/"+self.test+" "+self.workdir+" "+self.queue+" "+self.project+" "+cogv+" "+swiftv
            print "running......"+cmdline
            res = commands.getoutput(cmdline)
            print res
            cmdline2 =  "scp -r "+self.login+":"+rundir+" ."
            res2 = commands.getoutput(cmdline)
    

        

#---------------------main--------------------------------------------------------

sites = []

s_logins = ['login.beagle.ci.uchicago.edu','tg457040@tg-login.ranger.tacc.teragrid.org']
logintype = ['ssh','ssh','ssh']
#workdirs = ['/home/skenny/swift_runs/beagle/cog/modules/swift/tests']
workdirs = ['/home/skenny/cog/modules/swift/tests','/work/00043/tg457040/cog/modules/swift/tests']
queues = ['batch','development']
projects = ['CI-IBN000039','TG-DBS080004N']

test_type = ['groups/crayxt-pbs-coasters.sh','groups/local-sge-coasters.sh']
cogv = 'tags/swift_0.92.1'
swiftv = 'tags/release-0.92.1'

rundir = commands.getoutput('date +\"%Y-%m-%d\"')
rundir = "run-"+rundir

for idx,s in enumerate(s_logins):
    sites.append(Site(s,logintype[idx],workdirs[idx],queues[idx],projects[idx],test_type[idx]))

# loop over all or run single

for s in sites:
    s.testSite(cogv,swiftv)






